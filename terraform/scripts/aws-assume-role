#!/bin/bash

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -eo pipefail

CACHE_DIR=~/.aws/cli/cache

# Make sure we get or refresh the temporary credentials
aws sts get-caller-identity > /dev/null

if [ -n "$AWS_PROFILE" ]; then
  source_profile="$(aws configure get source_profile --profile "$AWS_PROFILE" || echo "")"
  if [ -n "$source_profile" ]; then
    role_arn="$(aws configure get role_arn --profile "$AWS_PROFILE")"
    cache_file=${CACHE_DIR}/${AWS_PROFILE}--$(echo "$role_arn" | sed 's/:/_/g' | sed 's/\//-/g').json
    AWS_DEFAULT_REGION=$(aws configure get region --profile "$source_profile" || echo "")
    AWS_ACCESS_KEY_ID="$(cat $cache_file | jq -r ".Credentials.AccessKeyId")"
    AWS_SECRET_ACCESS_KEY="$(cat $cache_file | jq -r ".Credentials.SecretAccessKey")"
    AWS_SECURITY_TOKEN="$(cat $cache_file | jq -r ".Credentials.SessionToken")"
    AWS_SESSION_TOKEN=$AWS_SECURITY_TOKEN
  else
    AWS_DEFAULT_REGION="$(aws configure get region --profile "$AWS_PROFILE" || echo "")"
    AWS_ACCESS_KEY_ID="$(aws configure get aws_access_key_id --profile "$AWS_PROFILE" || echo "")"
    AWS_SECRET_ACCESS_KEY="$(aws configure get aws_secret_access_key --profile "$AWS_PROFILE" || echo "")"
  fi
fi

export AWS_DEFAULT_REGION
export AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY
export AWS_SECURITY_TOKEN
export AWS_SESSION_TOKEN

exec "$@"
