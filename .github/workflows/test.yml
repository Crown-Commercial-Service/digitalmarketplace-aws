name: Run tests
on: [pull_request]
jobs:
  unit_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Python cache
        uses: actions/cache@v2
        id: python-cache
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: venv-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install developer tools
        run: make bootstrap

      - name: Install dependencies
        run: invoke requirements-dev
        if: steps.python-cache.outputs.cache-hit != 'true'

      - name: Run tests
        run: invoke test

  terraform_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install tfenv
        run: |
          git clone https://github.com/tfutils/tfenv.git ~/.tfenv
          echo "$HOME/.tfenv/bin" >> $GITHUB_PATH

      - name: Install Terraform
        run: tfenv install

      - name: Setup Terraform cache
        uses: actions/cache@v2
        with:
          path: "**/.terraform"
          key: terraform-${{ runner.os }}-${{ hashFiles('**/.terraform-version') }}

      - name: Validate terraform
        run: |
          make terraformatest
          make test-terraform
