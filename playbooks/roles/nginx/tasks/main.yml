---
- name: Add nginx apt key
  apt_key:
    url: http://nginx.org/keys/nginx_signing.key
    state: present
  tags: image-setup

- name: Add Nginx repository
  apt_repository:
    repo: 'deb http://nginx.org/packages/ubuntu/ trusty nginx'
    state: present
  tags: image-setup

- name: Update apt cache if repository just added.
  apt: update_cache=yes
  tags: image-setup

- name: Install Nginx
  apt: name=nginx update_cache=yes state=installed
  tags: image-setup

- name: Ensure that sites-available directory exists
  file:
    path: /etc/nginx/sites-available
    state: directory
  tags: image-setup

- name: Ensure that sites-enabled directory exists
  file:
    path: /etc/nginx/sites-enabled
    state: directory
  tags: image-setup

- name: Ensure that the default site is disabled
  command: rm /etc/nginx/sites-enabled/default
           removes=/etc/nginx/sites-enabled/default
  notify: reload nginx
  tags: image-setup

- name: Ensure {{ static_files_root }} dir exists
  file: path={{ static_files_root }} state=directory
  tags: image-setup

- name: Copy robots.txt files
  copy: src={{ item }} dest={{ static_files_root }}/{{ item }} owner=root group=root mode=0644
  with_items:
    - robots_www.txt
    - robots_assets.txt
  tags: image-setup

- name: Copy maintenance.html file
  copy: src=maintenance.html dest={{ static_files_root }}/maintenance.html owner=root group=root mode=0644
  tags: image-setup

- name: Create main Nginx configuration file
  template: src=nginx.conf.j2
            dest=/etc/nginx/nginx.conf
            backup=no
  notify: reload nginx
  tags: instance-config

- name: Create the Nginx configuration files
  template: src={{ item }}.j2
            dest=/etc/nginx/sites-available/{{ item }}
            backup=yes
  notify: reload nginx
  with_items: "{{ nginx_configs[mode] }}"
  tags: instance-config

- name: Ensure that the configuration files are enabled
  command: ln -s /etc/nginx/sites-available/{{ item }}
           /etc/nginx/sites-enabled/{{ item }}
           creates=/etc/nginx/sites-enabled/{{ item }}
  notify: reload nginx
  with_items: "{{ nginx_configs[mode] }}"
  tags: instance-config

- name: Ensure Nginx service is started
  service: name=nginx state=started enabled=yes
  tags: instance-config
