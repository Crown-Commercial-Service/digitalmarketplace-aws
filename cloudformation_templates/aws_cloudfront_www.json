{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Digital Marketplace WWW CloudFront Distribution",

  "Parameters": {
    "AdminOrigin": {
      "Type": "String",
      "Description": "The origin domain for the admin frontend app."
    },
    "BuyerOrigin": {
      "Type": "String",
      "Description": "The origin domain for the buyer frontend app."
    },
    "SupplierOrigin": {
      "Type": "String",
      "Description": "The origin domain for the supplier frontend app."
    },
    "Domain": {
      "Type": "String",
      "Description": "The domain that CloudFront should serve off."
    },
    "HostedZoneName": {
      "Type": "String",
      "Description": "The Route53 hosted zone"
    },
    "LogsBucket": {
      "Type": "String",
      "Description": "S3 bucket name for the logs"
    },
    "IamCertificateId": {
      "Type": "String",
      "Description": "IAM SSL certificate ID"
    }
  },

  "Resources": {
    "WWWCloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Origins": [
            {
              "DomainName": {"Ref": "AdminOrigin"},
              "Id": "AdminOriginId",
              "CustomOriginConfig": {
                "HTTPPort": "80",
                "OriginProtocolPolicy": "match-viewer"
              }
            },
            {
              "DomainName": {"Ref": "BuyerOrigin"},
              "Id": "BuyerOriginId",
              "CustomOriginConfig": {
                "HTTPPort": "80",
                "OriginProtocolPolicy": "http-only"
              }
            },
            {
              "DomainName": {"Ref": "SupplierOrigin"},
              "Id": "SupplierOriginId",
              "CustomOriginConfig": {
                "HTTPPort": "80",
                "OriginProtocolPolicy": "http-only"
              }
            }
          ],
          "Enabled": true,
          "Logging": {
            "IncludeCookies": false,
            "Bucket": {"Ref": "LogsBucket"},
            "Prefix": {
              "Fn::Join": ["", [
                "cloudfront/",
                {"Ref": "Domain"},
                "/"
              ]]
            }
          },

          "Aliases": [ {"Ref": "Domain"} ],

          "DefaultCacheBehavior": {
            "TargetOriginId": "BuyerOriginId",
            "AllowedMethods": ["POST", "PATCH", "GET", "DELETE", "OPTIONS", "PUT", "HEAD" ],
            "ViewerProtocolPolicy": "allow-all",
            "SmoothStreaming": false,
            "ForwardedValues": {
              "Headers": ["Authorization", "Host"],
              "QueryString": true
            }
          },
          "CacheBehaviors": [
            {
              "TargetOriginId": "SupplierOriginId",
              "PathPattern": "/supplier*",
              "AllowedMethods": ["POST", "PATCH", "GET", "DELETE", "OPTIONS", "PUT", "HEAD" ],
              "ViewerProtocolPolicy": "allow-all",
              "SmoothStreaming": false,
              "ForwardedValues": {
                "Cookies": {"Forward": "all"},
                "Headers": ["Authorization", "Host"],
                "QueryString": true
              }
            },
            {
              "TargetOriginId": "AdminOriginId",
              "PathPattern": "/admin*",
              "AllowedMethods": ["POST", "PATCH", "GET", "DELETE", "OPTIONS", "PUT", "HEAD" ],
              "ViewerProtocolPolicy": "allow-all",
              "SmoothStreaming": false,
              "ForwardedValues": {
                "Cookies": {"Forward": "all"},
                "Headers": ["Authorization", "Host"],
                "QueryString": true
              }
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "IamCertificateId": {"Ref": "IamCertificateId"},
            "SslSupportMethod": "sni-only",
            "MinimumProtocolVersion": "TLSv1"
          }
        }
      }
    },
    "Route53RecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": {"Ref": "HostedZoneName"},
        "Name": {"Fn::Join": ["",[
            {"Ref": "Domain"}, "."]]
        },
        "Type": "CNAME",
        "ResourceRecords": [
          {"Fn::GetAtt": ["WWWCloudFrontDistribution", "DomainName"]}
        ],
        "TTL": "300"
      }
    }
  }
}
