{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Elasticsearch cluster",

  "Parameters": {
    "GroupTag": {
      "Type": "String",
      "Description": "Group Tag"
    },
    "LoadBalancerName": {
      "Type": "String",
      "Description": "ELB name prefix"
    },
    "KeyName": {
      "Type": "String",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the server"
    },
    "SSHCidrIp": {
      "Type": "String",
      "Description": "CIDR or IP to use for SSH access security group rules"
    },
    "Port": {
      "Type": "Number",
      "Default": "9200",
      "Description": "Elasticsearch port"
    },
    "InstanceImage" : {
      "Description" : "EC2 instance image",
      "Type" : "String"
    },
    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String"
    },
   "InstanceCount" : {
      "Description" : "Number of instances to start",
      "Type" : "String"
    }
  },

  "Resources": {
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Main instance security group"
      }
    },

    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "ELB security group"
      }
    },

    "ClusterDiscoveryIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupName": {"Ref": "InstanceSecurityGroup"},
          "IpProtocol": "-1",
          "FromPort": "0",
          "ToPort": "65535",
          "SourceSecurityGroupName": {"Ref": "InstanceSecurityGroup"}
        }
    },

    "LoadBalancerIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "InstanceSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": {"Ref": "Port"},
        "ToPort": {"Ref": "Port"},
        "SourceSecurityGroupName": {"Ref": "LoadBalancerSecurityGroup"}
      }
    },

    "SSHIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "InstanceSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": {"Ref": "SSHCidrIp"}
      }
    },

    "IAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
              "Effect": "Allow",
              "Principal": {
                  "Service": [ "ec2.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "elasticsearch-ec2-describe",
          "PolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": "ec2:DescribeInstances",
              "Resource": "*"
            }]
          }
        }]
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{"Ref": "IAMRole"}]
      }
    },

    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "LoadBalancerName": {"Ref": "LoadBalancerName"},
        "AvailabilityZones": {"Fn::GetAZs": ""},
        "CrossZone": "true",
        "Listeners": [{
          "LoadBalancerPort": {"Ref": "Port"},
          "InstancePort": {"Ref": "Port"},
          "Protocol": "HTTP"
        }],
        "SecurityGroups": [
          {"Fn::GetAtt": ["LoadBalancerSecurityGroup", "GroupId"]}
        ],
        "HealthCheck": {
          "Target": {"Fn::Join": ["", [
            "HTTP:", {"Ref": "Port"}, "/"
          ]]},
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        }
      }
    },

    "AutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "Tags" : [
          {
            "Key": "Group",
            "Value": {"Ref": "GroupTag"},
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": {"Ref": "GroupTag"},
            "PropagateAtLaunch": true
          }
        ],
        "AvailabilityZones" : {"Fn::GetAZs": ""},
        "LaunchConfigurationName" : {"Ref": "LaunchConfiguration"},
        "LoadBalancerNames": [{"Ref": "LoadBalancer"}],
        "MinSize" : {"Ref": "InstanceCount"},
        "MaxSize" : {"Ref": "InstanceCount"},
        "DesiredCapacity" : {"Ref": "InstanceCount"}
      }
    },

    "LaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "SecurityGroups": [{"Ref": "InstanceSecurityGroup"}],
        "ImageId": {"Ref": "InstanceImage"},
        "KeyName": {"Ref": "KeyName"},
        "IamInstanceProfile": {"Ref": "InstanceProfile"},
        "InstanceType": {"Ref": "InstanceType"}
      }
    }
  },

  "Outputs": {
    "InstanceSecurityGroup": {
      "Description": "Elasticsearch instances security group",
      "Value": {"Ref": "InstanceSecurityGroup"}
    },
    "LoadBalancerSecurityGroup": {
      "Description": "ELB security group",
      "Value": {"Ref": "LoadBalancerSecurityGroup"}
    },
    "URL": {
      "Description": "Load balancer endpoint URL",
      "Value": {"Fn::GetAtt": ["LoadBalancer", "DNSName"]}
    }
  }
}
