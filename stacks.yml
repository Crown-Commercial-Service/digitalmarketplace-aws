---
all:
  - apps
  - dev_access
  - data_storage

apps:
  - api
  - search_api
  - admin_frontend

eb_apps:
  - api_app
  - search_api_app
  - admin_frontend_app

data_storage:
  - database
  - documents_s3
  - elasticsearch

dev_access:
  - database_dev_access
  - elasticsearch_dev_access

database:
  name: "rds-database-{{ stage }}-{{ environment }}"
  template: cloudformation_templates/aws_rds_database.json
  parameters:
    DBName: "{{ database.name }}"
    DBUser: "{{ database.user }}"
    DBPassword: "{{ database.password }}"
    DBInstanceType: "{{ database.instance_type }}"
    DBAllocatedStorage: "{{ database.allocated_storage }}"

documents_s3:
  name: "documents-s3-{{ stage }}-{{ environment }}"
  template: cloudformation_templates/aws_documents_s3.json
  parameters:
    BucketName: "digitalmarketplace-documents-{{ stage }}-{{ environment }}"

api_app:
  name: "digitalmarketplace-api-app"
  template: cloudformation_templates/aws_elasticbeanstalk_app.json
  parameters:
    ApplicationName: "digitalmarketplace-api"

api:
  name: "digitalmarketplace-api-{{ stage }}-{{ environment }}"
  template: cloudformation_templates/aws_digitalmarketplace_api.json
  dependencies:
    - api_app
    - database
  parameters:
    ApplicationName: "{{ stacks.api_app.parameters.ApplicationName }}"
    EnvironmentName: "dmapi-{{ stage[:3] }}-{{ environment }}"
    KeyName: "{{ key_name }}"
    InstanceType: "{{ api.instance_type }}"
    MinInstanceCount: "{{ api.min_instance_count }}"
    MaxInstanceCount: "{{ api.max_instance_count }}"
    APIAuthTokens: "{{ api.auth_tokens | join(':') }}"
    DBUser: "{{ database.user }}"
    DBPassword: "{{ database.password }}"
    DBPath: "{{ stacks.database.outputs.URL }}"
    RDSSecurityGroup: "{{ stacks.database.outputs.SecurityGroup }}"

database_dev_access:
  name: "digitalmarketplace-api-{{ stage }}-{{ environment }}-dev-access"
  template: cloudformation_templates/aws_dev_access.json
  dependencies:
    - database
  parameters:
    CidrIp: "{{ user_cidr_ip }}"
    FromPort: "{{ database.port }}"
    ToPort: "{{ database.port }}"
    SecurityGroup: "{{ stacks.database.outputs.SecurityGroup }}"

elasticsearch:
  name: "elasticsearch-{{ stage }}-{{ environment }}"
  template: cloudformation_templates/aws_elasticsearch.json
  parameters:
    KeyName: "{{ key_name }}"
    SSHCidrIp: "{{ user_cidr_ip }}"
    LoadBalancerName: "elasticsearch-{{ stage }}-{{ environment }}"
    LoadBalancerSubnets: "{{ subnets | join(',') }}"
    GroupTag: "elasticsearch-{{ stage }}-{{ environment }}"
    InstanceCount: "{{ elasticsearch.instance_count }}"
    InstanceType: "{{ elasticsearch.instance_type }}"
    InstanceImage: "{{ elasticsearch.instance_image }}"

elasticsearch_dev_access:
  name: "elasticsearch-{{ stage }}-{{ environment }}-dev-access"
  template: cloudformation_templates/aws_dev_access.json
  dependencies:
    - elasticsearch
  parameters:
    CidrIp: "{{ user_cidr_ip }}"
    FromPort: "{{ elasticsearch.port }}"
    ToPort: "{{ elasticsearch.port }}"
    SecurityGroup: "{{ stacks.elasticsearch.outputs.InstanceSecurityGroup }}"

search_api_app:
  name: "digitalmarketplace-search-api-app"
  template: cloudformation_templates/aws_elasticbeanstalk_app.json
  parameters:
    ApplicationName: "digitalmarketplace-search-api"

search_api:
  name: "digitalmarketplace-search-api-{{ stage }}-{{ environment }}"
  template: cloudformation_templates/aws_digitalmarketplace_search_api.json
  dependencies:
    - search_api_app
    - elasticsearch
  parameters:
    ApplicationName: "{{ stacks.search_api_app.parameters.ApplicationName }}"
    EnvironmentName: "dmsearch-{{ stage[:3] }}-{{ environment }}"
    KeyName: "{{ key_name }}"
    InstanceType: "{{ search_api.instance_type }}"
    MinInstanceCount: "{{ search_api.min_instance_count }}"
    MaxInstanceCount: "{{ search_api.max_instance_count }}"
    SearchAPIAuthTokens: "{{ search_api.auth_tokens | join(':') }}"
    ElasticsearchHost: "{{ stacks.elasticsearch.outputs.URL }}"
    ElasticsearchPort: "{{ elasticsearch.port }}"
    ElasticsearchSecurityGroup: "{{ stacks.elasticsearch.outputs.LoadBalancerSecurityGroup }}"

admin_frontend_app:
  name: "digitalmarketplace-admin-frontend-app"
  template: cloudformation_templates/aws_elasticbeanstalk_app.json
  parameters:
    ApplicationName: "digitalmarketplace-admin-frontend"

admin_frontend:
  name: "digitalmarketplace-admin-frontend-{{ stage }}-{{ environment }}"
  template: cloudformation_templates/aws_digitalmarketplace_admin_frontend.json
  dependencies:
    - documents_s3
    - api
    - admin_frontend_app
  parameters:
    ApplicationName: "{{ stacks.admin_frontend_app.parameters.ApplicationName }}"
    EnvironmentName: "dmadmin-{{ stage[:3] }}-{{ environment }}"
    KeyName: "{{ key_name }}"
    InstanceType: "{{ admin_frontend.instance_type }}"
    MinInstanceCount: "{{ admin_frontend.min_instance_count }}"
    MaxInstanceCount: "{{ admin_frontend.max_instance_count }}"
    APIAuthTokens: "{{ api.auth_tokens[0] }}"
    DigitalmarketplaceAPIURL: "{{ stacks.api.outputs.URL }}"
    S3Bucket: "{{ stacks.documents_s3.outputs.Name }}"
    AdminPasswordHash: "{{ admin_frontend.admin_password_hash | replace('$', '\\$') }}"
